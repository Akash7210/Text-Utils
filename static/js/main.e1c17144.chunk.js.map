{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","Link","to","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","handleUpClick","newText","toUpperCase","showAlert","handleLowClick","toLowerCase","handleCopyClick","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","filter","element","Alert","height","alert","msg","About","myStyle","border","borderColor","data-bs-parent","App","setMode","setAlert","message","setTimeout","BrowserRouter","body","Routes","Route","exact","path","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.e1c17144.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function  Navbar(props) {\r\n  return (\r\n    <div><nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <Link className=\"navbar-brand\" to=\"#\">Text Utils</Link>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n        <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" >\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link active\" aria-current=\"page\" to=\"/\">Home</Link>\r\n          </li>\r\n          <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/about\">About</Link>\r\n          </li>\r\n         \r\n          \r\n        </ul>\r\n       {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </nav></div>\r\n  )\r\n}\r\n","import React,{useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  \r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was clicked \")\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleLowClick=()=>{\r\n \r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    \r\n    const handleOnChange=(event)=>{\r\n        console.log(\"Onchange  was clicked \")\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopyClick=()=>{\r\n      var text=document.getElementById(\"exampleFormControlTextarea1\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Text copied Successfully\",\"success\");\r\n    }\r\n    const [text,setText]=useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1 className=\"mb-2\" >{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#cac4c5':'white',color:props.mode==='dark'?'white':'black'}}  id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n</div>\r\n<button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to upper case </button>\r\n<button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleLowClick}>Convert to Lowercase </button>\r\n<button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleCopyClick}>Copy </button>\r\n\r\n\r\n    </div>\r\n    <div className='container my-3' style={{color:props.mode==='dark'?'white':'black'}}>\r\n<h1>Your text Summary</h1>\r\n<p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and{text.length} characters</p>\r\n<p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minitus to Read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'50px'}} >\r\n{props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n<strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>}\r\n\r\n   </div>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function About(props) {\r\n  //  const[myStyle,setMyStyle]=useState({\r\n  //   color:'black',\r\n  //   backgroundColor:'white'\r\n  //  })\r\n  let myStyle={\r\n    color:props.mode==='dark'?'white':'black',\r\n    backgroundColor:props.mode==='dark'?'grey':'white',\r\n    border: '2px solid',\r\n    borderColor:props.mode==='dark'?'rgb(36 36 36)':'white'\r\n  }\r\n\r\n   \r\n  return (\r\n    <div className='container' style={{ color:props.mode==='dark'?'white':'black'}}>\r\n        <h1 className='my-3'>About Us</h1>\r\n        <div className=\"accordion\" id=\"accordionExample\">\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseOne\" aria-expanded=\"true\" aria-controls=\"collapseOne\">\r\n        <strong>Analyze Your Text</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseOne\" className=\"accordion-collapse collapse show\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n      It is a Simple Text Analyzer , which mutilates your text, but in a tender way\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseTwo\" aria-expanded=\"false\" aria-controls=\"collapseTwo\">\r\n       <strong> Free To Use</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseTwo\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n      It is completely free to use. No credit cards required. Use as much as you want!!\r\n      </div>\r\n    </div>\r\n  </div>\r\n  <div className=\"accordion-item\">\r\n    <h2 className=\"accordion-header\">\r\n      <button className=\"accordion-button collapsed\" type=\"button\" style={myStyle} data-bs-toggle=\"collapse\" data-bs-target=\"#collapseThree\" aria-expanded=\"false\" aria-controls=\"collapseThree\">\r\n        <strong>Browser Compatible</strong>\r\n      </button>\r\n    </h2>\r\n    <div id=\"collapseThree\" className=\"accordion-collapse collapse\" data-bs-parent=\"#accordionExample\">\r\n      <div className=\"accordion-body\" style={myStyle}>\r\n      It is compatible with all of your favorite browsers.\r\n      </div>\r\n    </div>\r\n  </div>\r\n</div>\r\n\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n import About from './Components/About';\nimport { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n\n  const [alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n\n  }\n\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark Mode has been Enabled\",\"success\");\n      // document.title='TextUtils=DarkMode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n      // document.title='TextUtils=LightMode';\n    }\n  }\n  return (\n <>\n <BrowserRouter>\n    <Navbar mode={mode} toggleMode={toggleMode}/> \n    <Alert alert={alert}/>\n    \n   \n   {/* <TextForm showAlert={showAlert} heading=\"Enter the text to analyze below\" mode={mode}/>  */}\n\n   <div className=\"container my-3\">\n          <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode}/>}>\n            </Route>\n            <Route exact path=\"/\" element={<TextForm heading=\" Try TextUtils- Word Counter,Character Counter\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes>\n        </div>\n        </BrowserRouter>\n  \n    \n   \n    </>\n  );\n}\n\nexport default App;\n   ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}