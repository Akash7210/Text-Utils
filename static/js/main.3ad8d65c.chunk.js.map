{"version":3,"sources":["Components/Navbar.js","Components/TextForm.js","Components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","React","createElement","className","concat","mode","href","type","data-bs-toggle","data-bs-target","aria-controls","aria-expanded","aria-label","id","aria-current","onClick","toggleMode","role","htmlFor","TextForm","text","setText","useState","Fragment","style","color","heading","value","onChange","event","console","log","target","backgroundColor","rows","disabled","length","handleUpClick","newText","toUpperCase","showAlert","handleLowClick","toLowerCase","handleCopyClick","document","getElementById","select","navigator","clipboard","writeText","getSelection","removeAllRanges","split","filter","element","Alert","height","alert","msg","App","setMode","setAlert","message","setTimeout","body","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","render","StrictMode"],"mappings":"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","file":"static/js/main.3ad8d65c.chunk.js","sourcesContent":["import React from 'react'\r\n// import { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function  Navbar(props) {\r\n  return (\r\n    <div><nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n    <div className=\"container-fluid\">\r\n      <a className=\"navbar-brand\" href=\" /\">Text Utils</a>\r\n      <button className=\"navbar-toggler\" type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#navbarScroll\" aria-controls=\"navbarScroll\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n      </button>\r\n      <div className=\"collapse navbar-collapse\" id=\"navbarScroll\">\r\n        <ul className=\"navbar-nav me-auto my-2 my-lg-0 navbar-nav-scroll\" >\r\n          <li className=\"nav-item\">\r\n            <a className=\"nav-link active\" aria-current=\"page\" href=\"/\">Home</a>\r\n          </li>\r\n          {/* <li className=\"nav-item\">\r\n            <a className=\"nav-link \" href=\"/\">About</a>\r\n          </li> */}\r\n         \r\n          \r\n        </ul>\r\n       {/* <form className=\"d-flex\" role=\"search\">\r\n          <input className=\"form-control me-2\" type=\"search\" placeholder=\"Search\" aria-label=\"Search\"/>\r\n          <button className=\"btn btn-outline-success\" type=\"submit\">Search</button>\r\n        </form> */}\r\n                <div className={`form-check form-switch text-${props.mode==='light'?'dark':'light'}`}>\r\n          <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" role=\"switch\" id=\"flexSwitchCheckDefault\"/>\r\n          <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable Dark Mode</label>\r\n        </div>\r\n        \r\n      </div>\r\n    </div>\r\n  </nav></div>\r\n  )\r\n}\r\n","import React,{useState } from 'react'\r\n\r\n\r\nexport default function TextForm(props) {\r\n  \r\n    const handleUpClick=()=>{\r\n        console.log(\"Uppercase was clicked \")\r\n        let newText=text.toUpperCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Uppercase\",\"success\");\r\n    }\r\n    const handleLowClick=()=>{\r\n \r\n        let newText=text.toLowerCase();\r\n        setText(newText)\r\n        props.showAlert(\"Converted to Lowercase\",\"success\");\r\n    }\r\n    \r\n    const handleOnChange=(event)=>{\r\n        console.log(\"Onchange  was clicked \")\r\n        setText(event.target.value)\r\n    }\r\n    const handleCopyClick=()=>{\r\n      var text=document.getElementById(\"exampleFormControlTextarea1\");\r\n      text.select();\r\n      navigator.clipboard.writeText(text.value);\r\n      document.getSelection().removeAllRanges();\r\n      props.showAlert(\"Text copied Successfully\",\"success\");\r\n    }\r\n    const [text,setText]=useState('');\r\n  return (\r\n    <>\r\n    <div className='container' style={{color:props.mode==='dark'?'white':'black'}}>\r\n      <h1 className=\"mb-2\" >{props.heading}</h1>\r\n<div className=\"mb-3\">\r\n  <textarea className=\"form-control\" value={text} onChange={handleOnChange} style={{backgroundColor:props.mode==='dark'?'#cac4c5':'white',color:props.mode==='dark'?'white':'black'}}  id=\"exampleFormControlTextarea1\" rows=\"8\"></textarea>\r\n</div>\r\n<button  disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleUpClick}>Convert to upper case </button>\r\n<button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleLowClick}>Convert to Lowercase </button>\r\n<button disabled={text.length===0} className='btn btn-primary mx-1 my-1' onClick={handleCopyClick}>Copy </button>\r\n\r\n\r\n    </div>\r\n    <div className='container my-3' style={{color:props.mode==='dark'?'white':'black'}}>\r\n<h1>Your text Summary</h1>\r\n<p>{text.split(\" \").filter((element)=>{return element.length!==0}).length} words and{text.length} characters</p>\r\n<p>{0.008 * text.split(\" \").filter((element)=>{return element.length!==0}).length} Minitus to Read</p>\r\n<h2>Preview</h2>\r\n<p>{text.length>0?text:\"Nothing to Preview\"}</p>\r\n    </div>\r\n    </>\r\n  )\r\n}\r\n","import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n  return (\r\n    <div style={{height:'50px'}} >\r\n{props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n<strong>{props.alert.type}</strong>: {props.alert.msg}\r\n</div>}\r\n\r\n   </div>\r\n  )\r\n}\r\n","import React from 'react';\nimport { useState } from 'react';\nimport './App.css';\nimport Navbar from './Components/Navbar';\nimport TextForm from './Components/TextForm';\nimport Alert from './Components/Alert';\n// import About from './Components/About';\n// import { BrowserRouter, Routes, Route } from 'react-router-dom';\n\n\nfunction App() {\n  const[mode,setMode]=useState('light');\n\n  const [alert,setAlert]=useState(null);\n\n  const showAlert=(message,type)=>{\n    setAlert({\n      msg:message,\n      type:type\n    })\n    setTimeout(()=>{\n      setAlert(null);\n    },2000);\n\n  }\n\n\n  const toggleMode=()=>{\n    if(mode==='light'){\n      setMode('dark');\n      document.body.style.backgroundColor='grey';\n      showAlert(\"Dark Mode has been Enabled\",\"success\");\n      // document.title='TextUtils=DarkMode';\n    }\n    else{\n      setMode('light');\n      document.body.style.backgroundColor='white';\n      showAlert(\"Light Mode has been Enabled\",\"success\");\n      // document.title='TextUtils=LightMode';\n    }\n  }\n  return (\n <>\n {/* <BrowserRouter> */}\n    <Navbar mode={mode} toggleMode={toggleMode}/> \n    <Alert alert={alert}/>\n    \n   \n   <TextForm showAlert={showAlert} heading=\"Try TextUtils- Word Counter,Character Counter\" mode={mode}/> \n  \n   \n\n   <div className=\"container my-3\">\n          {/* <Routes>\n            <Route exact path=\"/about\" element={<About mode={mode}/>}>\n            </Route>\n            <Route exact path=\"/\" element={<TextForm heading=\" Try TextUtils- Word Counter,Character Counter\"  mode={mode} showAlert={showAlert} />}>\n            </Route>\n          </Routes> */}\n           {/* <About mode={mode}/> */}\n        </div>\n        {/* </BrowserRouter> */}\n  \n    \n   \n    </>\n  );\n}\n\nexport default App;\n   ","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}